This file is to help understand and plan the various functions signals and slots and each classes scope.
in order to enure repeatability and consistences within code.

Main classes
------------
MainWindow - QT widget responsible for drawing the UI and other subclasses
does not do any processing of data itself but calls other classes functions

SutStack - QT widget responsible for drawing the UI for the SUT control panel
Sends Signals to other Classes such as the SutTab for it to updates its UI. 
Sends Signals to the sysLogs class to update the log file on event based actions by the user. 

SutTab - QT widget responsible for drawing the UI for the SUT table
does not do any processing of data itself. Reacts to Signals form other Classes in order to update its/Children UI. 

sysLogsConsole - An Object class that is responsible for writing to the log file
Reacts to Signals sent by other classes with str messages to be written to the log file
processes messages and formats them based on a log hierarchy type system

serialHandler - An Object class that is responsible for handling the functions timing 
and runtime of communications with the serial Device connected. 
This object is created when the user selects a serial port and baud rate and clicks connect.
This object is destroyed when the user clicks disconnect.
This object is responsible for sending and receiving data from the serial device.
This object reacts to user command signals like Upgrade and Connect buttons.
This object sends signals to sysLogs 


Serial Send/communications
--------------------------
Commuication is bassed on a Call and Response system.
When a new SerialDevice Object is created it Connects to the serialdevice and sends a initial help command to the device:
the help comamnd retrieves a table of commands that the device supports.
The SerialDevice Objects operates in a seperate thead to the main UI thread. This stops blocking of the UI.
Command flow is as follows: ####
1. User inputs a Command in the UI:
2. The UI adds the command to a queue
3. The SerialDevice Object checks the queue for commands
4. The SerialDevice Object sends the command to the serial device
5. The device pareses and executes the command
6. if the command is a query command the device responds with the data sent back to the SerialDevice Object
7. The SerialDevice Object parses the data and adds it to the UI queue
8. The UI checks the queue for data and updates the UI with the data
9. The device sends the Done message to the SerialDevice Object when it has finished executing the command
10. The SerialDevice Object parses the Done message and adds it to the UI queue
11. The UI checks the queue for data and updates the UI with the Done message. 

Logs and Messages
-----------------
The LogsConsole Class is resposbible for creating and wiritng logs to the output. 
Logs are called by calling signals to the instance of the LogsConsole Class from other classes.
LogsTable is a Map used to output logs when a function is run that the user shoudl know about. 
Logs are created in the following way: 
*--Coms Term Function Name/Description--*
>>Command Sent to Device
<<Response from Device
**--Done : Command which is done--**

